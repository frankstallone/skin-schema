/* Utility classes */

/* Main navigation buttons */
.button a {
  color: var(--gray300);
  font-size: var(--step-1);
  display: inline-block;
  text-decoration: none;
}

.button a:hover,
.button a:focus,
.button a:active {
  color: var(--blue200);
  text-decoration: underline;
  text-decoration-thickness: max(0.15em, 1px);
}

/* Clips */

.clip-right {
  clip-path: polygon(
    var(--skew-s) 0%,
    100% 0%,
    calc(100% - var(--skew-s)) 100%,
    0% 100%
  );
}

/* Height
Utilities for setting the height of an element. */

.h-0 {
  height: 0px;
}

.h-px {
  height: 1px;
}

.h-0\.5 {
  height: 0.125rem; /* 2px */
}

.h-1 {
  height: 0.25rem; /* 4px */
}

.h-1\.5 {
  height: 0.375rem; /* 6px */
}

.h-2 {
  height: 0.5rem; /* 8px */
}

.h-2\.5 {
  height: 0.625rem; /* 10px */
}

.h-3 {
  height: 0.75rem; /* 12px */
}

.h-3\.5 {
  height: 0.875rem; /* 14px */
}

.h-4 {
  height: 1rem; /* 16px */
}

.h-5 {
  height: 1.25rem; /* 20px */
}

.h-6 {
  height: 1.5rem; /* 24px */
}

.h-7 {
  height: 1.75rem; /* 28px */
}

.h-8 {
  height: 2rem; /* 32px */
}

.h-9 {
  height: 2.25rem; /* 36px */
}

.h-10 {
  height: 2.5rem; /* 40px */
}

.h-11 {
  height: 2.75rem; /* 44px */
}

.h-12 {
  height: 3rem; /* 48px */
}

.h-14 {
  height: 3.5rem; /* 56px */
}

.h-16 {
  height: 4rem; /* 64px */
}

.h-20 {
  height: 5rem; /* 80px */
}

.h-24 {
  height: 6rem; /* 96px */
}

.h-28 {
  height: 7rem; /* 112px */
}

.h-32 {
  height: 8rem; /* 128px */
}

.h-36 {
  height: 9rem; /* 144px */
}

.h-40 {
  height: 10rem; /* 160px */
}

.h-44 {
  height: 11rem; /* 176px */
}

.h-48 {
  height: 12rem; /* 192px */
}

.h-52 {
  height: 13rem; /* 208px */
}

.h-56 {
  height: 14rem; /* 224px */
}

.h-60 {
  height: 15rem; /* 240px */
}

.h-64 {
  height: 16rem; /* 256px */
}

.h-72 {
  height: 18rem; /* 288px */
}

.h-80 {
  height: 20rem; /* 320px */
}

.h-96 {
  height: 24rem; /* 384px */
}

.h-auto {
  height: auto;
}

.h-1\/2 {
  height: 50%;
}

.h-1\/3 {
  height: 33.333333%;
}

.h-2\/3 {
  height: 66.666667%;
}

.h-1\/4 {
  height: 25%;
}

.h-2\/4 {
  height: 50%;
}

.h-3\/4 {
  height: 75%;
}

.h-1\/5 {
  height: 20%;
}

.h-2\/5 {
  height: 40%;
}

.h-3\/5 {
  height: 60%;
}

.h-4\/5 {
  height: 80%;
}

.h-1\/6 {
  height: 16.666667%;
}

.h-2\/6 {
  height: 33.333333%;
}

.h-3\/6 {
  height: 50%;
}

.h-4\/6 {
  height: 66.666667%;
}

.h-5\/6 {
  height: 83.333333%;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.h-min {
  height: min-content;
}

.h-max {
  height: max-content;
}

.h-fit {
  height: fit-content;
}

/* Width
Utilities for setting the width of an element. */

.max-inline-size\:measure-lg {
  max-inline-size: calc(var(--measure) * 1.25) !important;
}

.max-inline-size\:measure {
  max-inline-size: var(--measure) !important;
}

.max-inline-size\:measure\/2 {
  max-inline-size: calc(var(--measure) / 1.25) !important;
}

.max-inline-size\:paragraph {
  max-inline-size: 50ch !important;
}

.max-inline-size-full {
  max-inline-size: 100vw;
}

.w-0 {
  width: 0px;
}

.w-px {
  width: 1px;
}

.w-0\.5 {
  width: 0.125rem; /* 2px */
}

.w-1 {
  width: 0.25rem; /* 4px */
}

.w-1\.5 {
  width: 0.375rem; /* 6px */
}

.w-2 {
  width: 0.5rem; /* 8px */
}

.w-2\.5 {
  width: 0.625rem; /* 10px */
}

.w-3 {
  width: 0.75rem; /* 12px */
}

.w-3\.5 {
  width: 0.875rem; /* 14px */
}

.w-4 {
  width: 1rem; /* 16px */
}

.w-5 {
  width: 1.25rem; /* 20px */
}

.w-6 {
  width: 1.5rem; /* 24px */
}

.w-7 {
  width: 1.75rem; /* 28px */
}

.w-8 {
  width: 2rem; /* 32px */
}

.w-9 {
  width: 2.25rem; /* 36px */
}

.w-10 {
  width: 2.5rem; /* 40px */
}

.w-11 {
  width: 2.75rem; /* 44px */
}

.w-12 {
  width: 3rem; /* 48px */
}

.w-14 {
  width: 3.5rem; /* 56px */
}

.w-16 {
  width: 4rem; /* 64px */
}

.w-20 {
  width: 5rem; /* 80px */
}

.w-24 {
  width: 6rem; /* 96px */
}

.w-28 {
  width: 7rem; /* 112px */
}

.w-32 {
  width: 8rem; /* 128px */
}

.w-36 {
  width: 9rem; /* 144px */
}

.w-40 {
  width: 10rem; /* 160px */
}

.w-44 {
  width: 11rem; /* 176px */
}

.w-48 {
  width: 12rem; /* 192px */
}

.w-52 {
  width: 13rem; /* 208px */
}

.w-56 {
  width: 14rem; /* 224px */
}

.w-60 {
  width: 15rem; /* 240px */
}

.w-64 {
  width: 16rem; /* 256px */
}

.w-72 {
  width: 18rem; /* 288px */
}

.w-80 {
  width: 20rem; /* 320px */
}

.w-96 {
  width: 24rem; /* 384px */
}

.w-auto {
  width: auto;
}

.w-1\/2 {
  width: 50%;
}

.w-1\/3 {
  width: 33.333333%;
}

.w-2\/3 {
  width: 66.666667%;
}

.w-1\/4 {
  width: 25%;
}

.w-2\/4 {
  width: 50%;
}

.w-3\/4 {
  width: 75%;
}

.w-1\/5 {
  width: 20%;
}

.w-2\/5 {
  width: 40%;
}

.w-3\/5 {
  width: 60%;
}

.w-4\/5 {
  width: 80%;
}

.w-1\/6 {
  width: 16.666667%;
}

.w-2\/6 {
  width: 33.333333%;
}

.w-3\/6 {
  width: 50%;
}

.w-4\/6 {
  width: 66.666667%;
}

.w-5\/6 {
  width: 83.333333%;
}

.w-1\/12 {
  width: 8.333333%;
}

.w-2\/12 {
  width: 16.666667%;
}

.w-3\/12 {
  width: 25%;
}

.w-4\/12 {
  width: 33.333333%;
}

.w-5\/12 {
  width: 41.666667%;
}

.w-6\/12 {
  width: 50%;
}

.w-7\/12 {
  width: 58.333333%;
}

.w-8\/12 {
  width: 66.666667%;
}

.w-9\/12 {
  width: 75%;
}

.w-10\/12 {
  width: 83.333333%;
}

.w-11\/12 {
  width: 91.666667%;
}

.w-full {
  width: 100%;
}

.w-screen {
  width: 100vw;
}

.w-min {
  width: min-content;
}

.w-max {
  width: max-content;
}

.w-fit {
  width: fit-content;
}

/* Buttons */

.submit-button {
  border: none;
  background-color: var(--spot-color, var(--gray1200));
  color: var(--gray100);
  padding-inline: var(--space-m);
  padding-block: var(--space-s);
}

/* Region */

.region[data-padding='l'] {
  --region-space-top: var(--space-l-2xl);
  --region-space-bottom: var(--space-l-2xl);
}

/* Box */

.box[data-padding='xl'] {
  --padding: var(--space-xl);
}

.box[data-padding='2xl'] {
  --padding: var(--space-2xl);
}

.box[data-padding='3xl'] {
  --padding: var(--space-3xl);
}

/* Switcher */

.switcher[data-gap='none'] {
  --gap: 0;
}

.switcher[data-trenshold='xl'] {
  --threshold: 50rem;
}

/* Wrapper */

.wrapper[data-layout='md'] {
  --measure: 100ch;
}

/* Reel */

.reel[data-gap='m-l'] {
  --grid-gap: var(--space-m-l);
}

/* Card */

.card[data-layout='full'] {
  --max-width: auto;
}

/* Grid */

.grid[data-layout='50-50'] {
  --grid-placement: auto-fit;
}

.grid[data-rows='masonry'] {
  align-items: start;
  grid-template-rows: masonry;
}

/* Cover */

.cover > [data-margin-block-start='none'] {
  margin-block-start: 0;
}

.cover > [data-margin-block-end='none'] {
  margin-block-end: 0;
}

/* Flex */

.flex {
  display: flex;
}

flex-1 {
  flex: 1 1 0%;
}
flex-auto {
  flex: 1 1 auto;
}
flex-initial {
  flex: 0 1 auto;
}
flex-none {
  flex: none;
}

/* Flex Direction
Utilities for controlling the direction of flex items. */

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

/* Justify Content
Utilities for controlling how flex and grid items are positioned along a container's main axis. */

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

/* Justify Items
Utilities for controlling how grid items are aligned along their inline axis. */

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

/* Justify Self
Utilities for controlling how an individual grid item is aligned along its inline axis. */

.justify-self-auto {
  justify-self: auto;
}

.justify-self-start {
  justify-self: start;
}

.justify-self-end {
  justify-self: end;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-stretch {
  justify-self: stretch;
}

/* Media */

.aspect-video {
  aspect-ratio: 16 / 9;
}

/* Margin */

.mx-auto {
  margin-inline: auto;
}
.my-auto {
  margin-block: auto;
}

.m-0 {
  margin: 0;
}

.my-0 {
  margin-block: 0;
}

.mx-0 {
  margin-inline: 0;
}

/* Text Align
Utilities for controlling the alignment of text. */

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-start {
  text-align: start;
}

.text-end {
  text-align: end;
}

/* Font */

.uppercase {
  text-transform: uppercase;
}

.font-weight-base {
  font-weight: var(--font-weight-base);
}

.font-weight-emphasis {
  font-weight: var(--font-emphasis-weight);
}

.font-display {
  font-family: var(--font-display);
}

.step--2 {
  font-size: var(--step--2);
}
.step--1 {
  font-size: var(--step--1);
}
.step-0 {
  font-size: var(--step-0);
}
.step-1 {
  font-size: var(--step-1);
}
.step-2 {
  font-size: var(--step-2);
}
.step-3 {
  font-size: var(--step-3);
}
.step-4 {
  font-size: var(--step-4);
}
.step-5 {
  font-size: var(--step-5);
}
.step-6 {
  font-size: var(--step-6);
}
.step-7 {
  font-size: var(--step-7);
}

/* General */

.color-loud {
  color: var(--blue500);
}

.inset-0 {
  inset: 0px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.top-pad {
  padding-block-start: var(--gutter);
}

.block {
  display: block;
}

.currentColor {
  fill: currentColor;
}

/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note !important is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/

.sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important; /* 2 */
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important; /* 3 */
}

/*
	Use in conjunction with .sr-only to only display content when it's focused.
	@note Useful for skip links 
	@see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
	@note Based on a HTML5 Boilerplate technique, included in Bootstrap
	@note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver
		@author Sylvain Pigeard
		@see https://github.com/twbs/bootstrap/issues/20732
*/
.sr-only-focusable:focus,
.sr-only-focusable:active {
  clip: auto !important;
  -webkit-clip-path: none !important;
  clip-path: none !important;
  height: auto !important;
  margin: auto !important;
  overflow: visible !important;
  width: auto !important;
  white-space: normal !important;
}

.slant {
  fill: var(--spot-color, var(--color-light));
  display: block;
  height: 3.5em;
  width: 100%;
}

/* Spot colors */

.spot-color-primary {
  --spot-color: var(--blue100);
  --spot-color-text: var(--blue700);
}

.spot-color-primary-dark {
  --spot-color: var(--blue800);
  --spot-color-text: var(--blue200);
}

.section__inner {
  background: var(--spot-color, var(--color-light));
  color: var(--spot-color-text, var(--color-dark));
}

.section > .slant {
  transform: translateY(-8px);
}

.section > .slant:first-child {
  transform: rotate(180deg) translateY(-1px);
}

.page__buffer {
  margin-block-start: 20vh;
}

.image__primary {
  width: 100%;
}

.rounded {
  border-radius: var(--border-radius);
}

.border-0 {
  border-width: 0px;
}

/* Object Fit
Utilities for controlling how a replaced element's content should be resized. */

.object-contain {
  object-fit: contain;
}

.object-cover {
  object-fit: cover;
}

.object-fill {
  object-fit: fill;
}

.object-none {
  object-fit: none;
}

.object-scale-down {
  object-fit: scale-down;
}

/* Object Position
Utilities for controlling how a replaced element's content should be positioned within its container. */

.object-bottom {
  object-position: bottom;
}

.object-center {
  object-position: center;
}

.object-left {
  object-position: left;
}

.object-left-bottom {
  object-position: left bottom;
}

.object-left-top {
  object-position: left top;
}

.object-right {
  object-position: right;
}

.object-right-bottom {
  object-position: right bottom;
}

.object-right-top {
  object-position: right top;
}

.object-top {
  object-position: top;
}

/* Position
Utilities for controlling how an element is positioned in the DOM. */

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

/* Overflow
Utilities for controlling how an element handles content that is too large for the container. */

.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-clip {
  overflow: clip;
}
.overflow-visible {
  overflow: visible;
}
.overflow-scroll {
  overflow: scroll;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.overflow-y-hidden {
  overflow-y: hidden;
}
.overflow-x-clip {
  overflow-x: clip;
}
.overflow-y-clip {
  overflow-y: clip;
}
.overflow-x-visible {
  overflow-x: visible;
}
.overflow-y-visible {
  overflow-y: visible;
}
.overflow-x-scroll {
  overflow-x: scroll;
}
.overflow-y-scroll {
  overflow-y: scroll;
}

/* Will Change
Utilities for optimizing upcoming animations of elements that are expected to change. */

.will-change-auto {
  will-change: auto;
}

.will-change-scroll {
  will-change: scroll-position;
}

.will-change-contents {
  will-change: contents;
}

.will-change-transform {
  will-change: transform;
}

/* Display
Utilities for controlling the display box type of an element. */

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.inline-grid {
  display: inline-grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.product-image {
  transition: all 0.3s ease-in-out;
}

.product-image:hover {
  scale: 1.1;
  rotate: 5deg;
  filter: drop-shadow(0 0 0.75rem rgba(0, 0, 0, 0.25));
}

.grid div:nth-child(even) .product-image:hover {
  rotate: -5deg;
}

/* Hero */

.hero {
  height: 60vh;
  background:
    linear-gradient(180deg, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0) 75%);
  background-size: cover;
}
