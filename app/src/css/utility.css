/* Utility classes
 * -------------------------------------------------- 
 * Recommended patterns:
 * - Data attributes
 * - Spot colors
 * 
 * Data attributes for updating layout variables.
 * Example:
 *
 * .region[data-padding='l'] {
 *    --region-space-top: var(--space-l-2xl);
 *    --region-space-bottom: var(--space-l-2xl);
 *  }
 *
 * Spot colors for updating color variables.
 * Example:
 * 
 * .spot-color-gray {
 *   --spot-color: var(--gray500);
 *   --spot-color-text: var(--gray1200);
 * }
 *
 */

/* General */

.relative {
  position: relative;
}

.hidden {
  display: none;
  visibility: hidden;
}

.block {
  display: block;
}

.h-auto {
  height: auto;
}

.currentColor {
  fill: currentColor;
}

/*
	Improved screen reader only CSS class
	@author Gaël Poupard
		@note Based on Yahoo!'s technique
		@author Thierry Koblentz
		@see https://developer.yahoo.com/blogs/ydn/clip-hidden-content-better-accessibility-53456.html
	* 1.
		@note `clip` is deprecated but works everywhere
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip
	* 2.
		@note `clip-path` is the future-proof version, but not very well supported yet
		@see https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path
		@see http://caniuse.com/#search=clip-path
		@author Yvain Liechti
		@see https://twitter.com/ryuran78/status/778943389819604992
	* 3.
		@note preventing text to be condensed
		author J. Renée Beach
		@see https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
		@note Drupal 8 goes with word-wrap: normal instead
		@see https://www.drupal.org/node/2045151
		@see http://cgit.drupalcode.org/drupal/commit/?id=5b847ea
	* 4.
		@note !important is important
		@note Obviously you wanna hide something
		@author Harry Roberts
		@see https://csswizardry.com/2016/05/the-importance-of-important/
*/

.sr-only {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important; /* 1 */
  -webkit-clip-path: inset(50%) !important;
  clip-path: inset(50%) !important; /* 2 */
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
  white-space: nowrap !important; /* 3 */
}

/*
	Use in conjunction with .sr-only to only display content when it's focused.
	@note Useful for skip links 
	@see http://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
	@note Based on a HTML5 Boilerplate technique, included in Bootstrap
	@note Fixed a bug with position: static on iOS 10.0.2 + VoiceOver
		@author Sylvain Pigeard
		@see https://github.com/twbs/bootstrap/issues/20732
*/
.sr-only-focusable:focus,
.sr-only-focusable:active {
  clip: auto !important;
  -webkit-clip-path: none !important;
  clip-path: none !important;
  height: auto !important;
  margin: auto !important;
  overflow: visible !important;
  width: auto !important;
  white-space: normal !important;
}

.rounded {
  border-radius: var(--border-radius);
}

/* Font */

.uppercase {
  text-transform: uppercase;
}

.text-center {
  text-align: center;
}

.font-weight-base {
  font-weight: var(--font-weight-base);
}

/* Font step classes */

.step--2 {
  font-size: var(--step--2);
}
.step--1 {
  font-size: var(--step--1);
}
.step-0 {
  font-size: var(--step-0);
}
.step-1 {
  font-size: var(--step-1);
}
.step-2 {
  font-size: var(--step-2);
}
.step-3 {
  font-size: var(--step-3);
}
.step-4 {
  font-size: var(--step-4);
}
.step-5 {
  font-size: var(--step-5);
}
.step-6 {
  font-size: var(--step-6);
}
.step-7 {
  font-size: var(--step-7);
}

/* Flex */

.flex {
  display: flex;
}

flex-1 {
  flex: 1 1 0%;
}
flex-auto {
  flex: 1 1 auto;
}
flex-initial {
  flex: 0 1 auto;
}
flex-none {
  flex: none;
}

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

/* Justify Items
Utilities for controlling how grid items are aligned along their inline axis. */

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

/* Media */

.aspect-video {
  aspect-ratio: 16 / 9;
}

/* Margin */

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

/* Object Fit
Utilities for controlling how a replaced element's content should be resized. */

.object-contain {
  object-fit: contain;
}

.object-cover {
  object-fit: cover;
}

.object-fill {
  object-fit: fill;
}

.object-none {
  object-fit: none;
}

.object-scale-down {
  object-fit: scale-down;
}

/* Object Position
Utilities for controlling how a replaced element's content should be positioned within its container. */

.object-bottom {
  object-position: bottom;
}

.object-center {
  object-position: center;
}

.object-left {
  object-position: left;
}

.object-left-bottom {
  object-position: left bottom;
}

.object-left-top {
  object-position: left top;
}

.object-right {
  object-position: right;
}

.object-right-bottom {
  object-position: right bottom;
}

.object-right-top {
  object-position: right top;
}

.object-top {
  object-position: top;
}
